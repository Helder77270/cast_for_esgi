[
 {
  "shortname": "ForgeInstrumentRegistry",
  "longname": "ForgeInstrumentRegistry",
  "scenario": [
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id (static_id 0 (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 12)) \nstorage (record (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 13) (eventSinkContractAddress (literal (address \"tz1@SINK@\") (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 104))) (factories (type_annotation (map (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 18) ) (map \"string\" \"address\") (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 18))) (registrarAddress (literal (address \"tz1@REGISTRAR@\") (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 104))) (tokensByIsinCode (type_annotation (map (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 14) ) (map \"string\" (record ((address \"address\") (isin \"string\") (name \"string\")) None)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 14))) (tokensByName (type_annotation (map (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 15) ) (map \"string\" (record ((address \"address\") (isin \"string\") (name \"string\")) None)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 15))))\nstorage_type ((record ((eventSinkContractAddress \"address\") (factories (map \"string\" \"address\")) (registrarAddress \"address\") (tokensByIsinCode (map \"string\" (record ((address \"address\") (isin \"string\") (name \"string\")) None))) (tokensByName (map \"string\" (record ((address \"address\") (isin \"string\") (name \"string\")) None)))) None))\nmessages ((authorizeFactory True None None True (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 22) ((set_type (params (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 22)) (record ((factoryAddress \"address\") (factoryType \"string\")) (Some ((\"factoryType\") (\"factoryAddress\")))) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 23)) (verify (eq (attr (data) \"registrarAddress\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 75)) (sender) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 75)) (literal (string \"Sender is not the registry owner\") (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 75)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 75)) (set (getItem (attr (data) \"factories\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 25)) (attr (params (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 22)) \"factoryType\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 25)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 25)) (attr (params (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 22)) \"factoryAddress\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 25)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 25)))) (listInstrument True None None True (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 36) ((defineLocal \"present\" (literal (bool False) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 66)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 66)) (forGroup \"x\" (items (attr (data) \"factories\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 25)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 67)) ((ifBlock (eq (attr (iter \"x\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 67)) \"value\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 68)) (sender) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 68)) ((set (getLocal \"present\" (\"\" -1)) (literal (bool True) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 69)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 69))) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 68))) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 67)) (verify (getLocal \"present\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 71)) (literal (string \"Sender is not an authorized factory\") (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 71)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 71)) (verify (not (contains (attr (data) \"tokensByName\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 54)) (attr (params (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 36)) \"name\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 38)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 54)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 54)) (literal (string \"Token with this name already exists\") (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 54)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 54)) (verify (not (contains (attr (data) \"tokensByIsinCode\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 58)) (attr (params (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 36)) \"isin\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 39)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 58)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 58)) (literal (string \"Token with this isin already exists\") (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 58)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 58)) (set (getItem (attr (data) \"tokensByIsinCode\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 58)) (attr (params (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 36)) \"isin\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 39)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 40)) (params (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 36)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 40)) (set (getItem (attr (data) \"tokensByName\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 54)) (attr (params (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 36)) \"name\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 38)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 41)) (params (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 36)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 41)) (verify (isVariant (contract \"InstrumentListed\" (record ((address \"address\") (isin \"string\") (name \"string\")) None) (attr (data) \"eventSinkContractAddress\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 82)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 80)) \"Some\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 85)) (literal (string \"test error\") (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 85)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 85)) (set (operations (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 87)) (cons (transfer (params (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 36)) (literal (mutez 0) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 87)) (openVariant (contract \"InstrumentListed\" (record ((address \"address\") (isin \"string\") (name \"string\")) None) (attr (data) \"eventSinkContractAddress\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 82)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 80)) \"Some\" \"None\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 86)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 87)) (operations (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 87)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 87)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 87)))) (unAuthorizeFactory True None None True (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 28) ((verify (eq (attr (data) \"registrarAddress\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 75)) (sender) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 75)) (literal (string \"Sender is not the registry owner\") (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 75)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 75)) (forGroup \"x\" (items (attr (data) \"factories\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 25)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 31)) ((ifBlock (eq (attr (iter \"x\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 31)) \"value\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 32)) (params (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 28)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 32)) ((delItem (attr (data) \"factories\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 25)) (attr (iter \"x\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 31)) \"key\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 33)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 33))) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 32))) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 31)))) (unlistInstrument True None None True (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 45) ((defineLocal \"present\" (literal (bool False) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 66)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 66)) (forGroup \"x\" (items (attr (data) \"factories\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 25)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 67)) ((ifBlock (eq (attr (iter \"x\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 67)) \"value\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 68)) (sender) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 68)) ((set (getLocal \"present\" (\"\" -1)) (literal (bool True) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 69)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 69))) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 68))) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 67)) (verify (getLocal \"present\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 71)) (literal (string \"Sender is not an authorized factory\") (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 71)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 71)) (verify (contains (attr (data) \"tokensByIsinCode\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 58)) (params (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 45)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 62)) (literal (string \"No Token with this isin exists\") (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 62)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 62)) (verify (isVariant (contract \"InstrumentUnlisted\" (record ((address \"address\") (isin \"string\") (name \"string\")) None) (attr (data) \"eventSinkContractAddress\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 82)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 80)) \"Some\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 85)) (literal (string \"test error\") (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 85)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 85)) (set (operations (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 87)) (cons (transfer (getItem (attr (data) \"tokensByIsinCode\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 58)) (params (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 45)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 48)) (literal (mutez 0) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 87)) (openVariant (contract \"InstrumentUnlisted\" (record ((address \"address\") (isin \"string\") (name \"string\")) None) (attr (data) \"eventSinkContractAddress\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 82)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 80)) \"Some\" \"None\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 86)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 87)) (operations (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 87)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 87)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 87)) (delItem (attr (data) \"tokensByName\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 54)) (attr (getItem (attr (data) \"tokensByIsinCode\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 58)) (params (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 45)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 48)) \"name\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 50)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 50)) (delItem (attr (data) \"tokensByIsinCode\" (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 58)) (params (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 45)) (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 51)))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "(static_id 0 (\"src/ForgeInstrumentRegistry/ForgeInstrumentRegistry_contract.py\" 12))",
    "line_no": "(\"\" -1)",
    "show": true
   }
  ],
  "kind": "compilation"
 }
]