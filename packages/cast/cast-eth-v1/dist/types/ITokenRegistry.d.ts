/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface ITokenRegistryContract
  extends Truffle.Contract<ITokenRegistryInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<ITokenRegistryInstance>;
}

type AllEvents = never;

export interface ITokenRegistryInstance extends Truffle.ContractInstance {
  getTokenByName(
    name: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  getTokenByIsinCode(
    isinCode: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  getAllTokens(txDetails?: Truffle.TransactionDetails): Promise<string[]>;

  methods: {
    getTokenByName(
      name: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;

    getTokenByIsinCode(
      isinCode: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;

    getAllTokens(txDetails?: Truffle.TransactionDetails): Promise<string[]>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
