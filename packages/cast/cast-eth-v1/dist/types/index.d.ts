/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { AbstractInstrumentFactoryContract } from "./AbstractInstrumentFactory";
import { BasicTokenLibraryContract } from "./BasicTokenLibrary";
import { ForgeBondContract } from "./ForgeBond";
import { ForgeBondFactoryContract } from "./ForgeBondFactory";
import { ForgeInstrumentRegistryContract } from "./ForgeInstrumentRegistry";
import { ForgeStructuredProductFactoryContract } from "./ForgeStructuredProductFactory";
import { IInstrumentContract } from "./IInstrument";
import { IInstrumentRegistryContract } from "./IInstrumentRegistry";
import { IOperatorManagerContract } from "./IOperatorManager";
import { ISettlementContract } from "./ISettlement";
import { IterableBalancesContract } from "./IterableBalances";
import { ITokenRegistryContract } from "./ITokenRegistry";
import { MigrationsContract } from "./Migrations";
import { OperatorManagerLibraryContract } from "./OperatorManagerLibrary";
import { SecurityTokenBalancesLibraryContract } from "./SecurityTokenBalancesLibrary";
import { SettlementRepositoryLibraryContract } from "./SettlementRepositoryLibrary";
import { SettlementWorkflowLibraryContract } from "./SettlementWorkflowLibrary";

declare global {
  namespace Truffle {
    interface Artifacts {
      require(
        name: "AbstractInstrumentFactory"
      ): AbstractInstrumentFactoryContract;
      require(name: "BasicTokenLibrary"): BasicTokenLibraryContract;
      require(name: "ForgeBond"): ForgeBondContract;
      require(name: "ForgeBondFactory"): ForgeBondFactoryContract;
      require(name: "ForgeInstrumentRegistry"): ForgeInstrumentRegistryContract;
      require(
        name: "ForgeStructuredProductFactory"
      ): ForgeStructuredProductFactoryContract;
      require(name: "IInstrument"): IInstrumentContract;
      require(name: "IInstrumentRegistry"): IInstrumentRegistryContract;
      require(name: "IOperatorManager"): IOperatorManagerContract;
      require(name: "ISettlement"): ISettlementContract;
      require(name: "IterableBalances"): IterableBalancesContract;
      require(name: "ITokenRegistry"): ITokenRegistryContract;
      require(name: "Migrations"): MigrationsContract;
      require(name: "OperatorManagerLibrary"): OperatorManagerLibraryContract;
      require(
        name: "SecurityTokenBalancesLibrary"
      ): SecurityTokenBalancesLibraryContract;
      require(
        name: "SettlementRepositoryLibrary"
      ): SettlementRepositoryLibraryContract;
      require(
        name: "SettlementWorkflowLibrary"
      ): SettlementWorkflowLibraryContract;
    }
  }
}

export {
  AbstractInstrumentFactoryContract,
  AbstractInstrumentFactoryInstance,
} from "./AbstractInstrumentFactory";
export {
  BasicTokenLibraryContract,
  BasicTokenLibraryInstance,
} from "./BasicTokenLibrary";
export { ForgeBondContract, ForgeBondInstance } from "./ForgeBond";
export {
  ForgeBondFactoryContract,
  ForgeBondFactoryInstance,
} from "./ForgeBondFactory";
export {
  ForgeInstrumentRegistryContract,
  ForgeInstrumentRegistryInstance,
} from "./ForgeInstrumentRegistry";
export {
  ForgeStructuredProductFactoryContract,
  ForgeStructuredProductFactoryInstance,
} from "./ForgeStructuredProductFactory";
export { IInstrumentContract, IInstrumentInstance } from "./IInstrument";
export {
  IInstrumentRegistryContract,
  IInstrumentRegistryInstance,
} from "./IInstrumentRegistry";
export {
  IOperatorManagerContract,
  IOperatorManagerInstance,
} from "./IOperatorManager";
export { ISettlementContract, ISettlementInstance } from "./ISettlement";
export {
  IterableBalancesContract,
  IterableBalancesInstance,
} from "./IterableBalances";
export {
  ITokenRegistryContract,
  ITokenRegistryInstance,
} from "./ITokenRegistry";
export { MigrationsContract, MigrationsInstance } from "./Migrations";
export {
  OperatorManagerLibraryContract,
  OperatorManagerLibraryInstance,
} from "./OperatorManagerLibrary";
export {
  SecurityTokenBalancesLibraryContract,
  SecurityTokenBalancesLibraryInstance,
} from "./SecurityTokenBalancesLibrary";
export {
  SettlementRepositoryLibraryContract,
  SettlementRepositoryLibraryInstance,
} from "./SettlementRepositoryLibrary";
export {
  SettlementWorkflowLibraryContract,
  SettlementWorkflowLibraryInstance,
} from "./SettlementWorkflowLibrary";
