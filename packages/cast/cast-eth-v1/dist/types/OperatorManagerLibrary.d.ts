/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface OperatorManagerLibraryContract
  extends Truffle.Contract<OperatorManagerLibraryInstance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<OperatorManagerLibraryInstance>;
}

export interface NewOperator {
  name: "NewOperator";
  args: {
    _by: string;
    _operator: string;
    _operatorRole: BN;
    0: string;
    1: string;
    2: BN;
  };
}

export interface RevokeOperator {
  name: "RevokeOperator";
  args: {
    _by: string;
    _operator: string;
    _operatorRole: BN;
    0: string;
    1: string;
    2: BN;
  };
}

type AllEvents = NewOperator | RevokeOperator;

export interface OperatorManagerLibraryInstance
  extends Truffle.ContractInstance {
  methods: {};

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
